// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go handler.27.1
// 	protoc        (unknown)
// source: streaming-rule.proto

package mod

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FilterAction int32

const (
	FilterAction_equals    FilterAction = 0
	FilterAction_notEquals FilterAction = 1
	FilterAction_like      FilterAction = 2
	FilterAction_notLike   FilterAction = 3
)

// Enum value maps for FilterAction.
var (
	FilterAction_name = map[int32]string{
		0: "equals",
		1: "notEquals",
		2: "like",
		3: "notLike",
	}
	FilterAction_value = map[string]int32{
		"equals":    0,
		"notEquals": 1,
		"like":      2,
		"notLike":   3,
	}
)

func (x FilterAction) Enum() *FilterAction {
	p := new(FilterAction)
	*p = x
	return p
}

func (x FilterAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilterAction) Descriptor() protoreflect.EnumDescriptor {
	return file_streaming_rule_proto_enumTypes[0].Descriptor()
}

func (FilterAction) Type() protoreflect.EnumType {
	return &file_streaming_rule_proto_enumTypes[0]
}

func (x FilterAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FilterAction.Descriptor instead.
func (FilterAction) EnumDescriptor() ([]byte, []int) {
	return file_streaming_rule_proto_rawDescGZIP(), []int{0}
}

type StreamingRuleMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//服务相关的字段
	ServiceName   string `protobuf:"bytes,1,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	ServiceHost   string `protobuf:"bytes,2,opt,name=serviceHost,proto3" json:"serviceHost,omitempty"`
	ServiceRegion string `protobuf:"bytes,3,opt,name=serviceRegion,proto3" json:"serviceRegion,omitempty"`
	ServiceAz     string `protobuf:"bytes,4,opt,name=serviceAz,proto3" json:"serviceAz,omitempty"`
	ClusterName   string `protobuf:"bytes,5,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	//Series相关的字段
	MetricName string            `protobuf:"bytes,10,opt,name=metricName,proto3" json:"metricName,omitempty"`
	Labels     map[string]string `protobuf:"bytes,11,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	//时间字段，毫秒级别
	Timestamp int64 `protobuf:"varint,20,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	//聚合结果字段
	Values []float64 `protobuf:"fixed64,40,rep,packed,name=values,proto3" json:"values,omitempty"`
	//规则相关字段
	Rule *Rule `protobuf:"bytes,50,opt,name=rule,proto3" json:"rule,omitempty"`
}

func (x *StreamingRuleMessage) Reset() {
	*x = StreamingRuleMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streaming_rule_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamingRuleMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingRuleMessage) ProtoMessage() {}

func (x *StreamingRuleMessage) ProtoReflect() protoreflect.Message {
	mi := &file_streaming_rule_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamingRuleMessage.ProtoReflect.Descriptor instead.
func (*StreamingRuleMessage) Descriptor() ([]byte, []int) {
	return file_streaming_rule_proto_rawDescGZIP(), []int{0}
}

func (x *StreamingRuleMessage) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *StreamingRuleMessage) GetServiceHost() string {
	if x != nil {
		return x.ServiceHost
	}
	return ""
}

func (x *StreamingRuleMessage) GetServiceRegion() string {
	if x != nil {
		return x.ServiceRegion
	}
	return ""
}

func (x *StreamingRuleMessage) GetServiceAz() string {
	if x != nil {
		return x.ServiceAz
	}
	return ""
}

func (x *StreamingRuleMessage) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *StreamingRuleMessage) GetMetricName() string {
	if x != nil {
		return x.MetricName
	}
	return ""
}

func (x *StreamingRuleMessage) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *StreamingRuleMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *StreamingRuleMessage) GetValues() []float64 {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *StreamingRuleMessage) GetRule() *Rule {
	if x != nil {
		return x.Rule
	}
	return nil
}

type StreamingRuleBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//服务名称和指标名称用于路由
	ServiceName string `protobuf:"bytes,1,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	MetricName  string `protobuf:"bytes,2,opt,name=metricName,proto3" json:"metricName,omitempty"`
	//数据用于传输
	Messages []*StreamingRuleMessage `protobuf:"bytes,10,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *StreamingRuleBatch) Reset() {
	*x = StreamingRuleBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streaming_rule_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamingRuleBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamingRuleBatch) ProtoMessage() {}

func (x *StreamingRuleBatch) ProtoReflect() protoreflect.Message {
	mi := &file_streaming_rule_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamingRuleBatch.ProtoReflect.Descriptor instead.
func (*StreamingRuleBatch) Descriptor() ([]byte, []int) {
	return file_streaming_rule_proto_rawDescGZIP(), []int{1}
}

func (x *StreamingRuleBatch) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *StreamingRuleBatch) GetMetricName() string {
	if x != nil {
		return x.MetricName
	}
	return ""
}

func (x *StreamingRuleBatch) GetMessages() []*StreamingRuleMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

type Rule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Benchmark float64    `protobuf:"fixed64,1,opt,name=benchmark,proto3" json:"benchmark,omitempty"`
	Filters   []*Filter  `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	Groups    []string   `protobuf:"bytes,3,rep,name=groups,proto3" json:"groups,omitempty"`
	Aggregate *Aggregate `protobuf:"bytes,4,opt,name=aggregate,proto3" json:"aggregate,omitempty"`
}

func (x *Rule) Reset() {
	*x = Rule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streaming_rule_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule) ProtoMessage() {}

func (x *Rule) ProtoReflect() protoreflect.Message {
	mi := &file_streaming_rule_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule.ProtoReflect.Descriptor instead.
func (*Rule) Descriptor() ([]byte, []int) {
	return file_streaming_rule_proto_rawDescGZIP(), []int{2}
}

func (x *Rule) GetBenchmark() float64 {
	if x != nil {
		return x.Benchmark
	}
	return 0
}

func (x *Rule) GetFilters() []*Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *Rule) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *Rule) GetAggregate() *Aggregate {
	if x != nil {
		return x.Aggregate
	}
	return nil
}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value  string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Action string `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streaming_rule_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_streaming_rule_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_streaming_rule_proto_rawDescGZIP(), []int{3}
}

func (x *Filter) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Filter) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Filter) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type Aggregate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operation string `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
	Param     string `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *Aggregate) Reset() {
	*x = Aggregate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streaming_rule_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Aggregate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Aggregate) ProtoMessage() {}

func (x *Aggregate) ProtoReflect() protoreflect.Message {
	mi := &file_streaming_rule_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Aggregate.ProtoReflect.Descriptor instead.
func (*Aggregate) Descriptor() ([]byte, []int) {
	return file_streaming_rule_proto_rawDescGZIP(), []int{4}
}

func (x *Aggregate) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *Aggregate) GetParam() string {
	if x != nil {
		return x.Param
	}
	return ""
}

var File_streaming_rule_proto protoreflect.FileDescriptor

var file_streaming_rule_proto_rawDesc = []byte{
	0x0a, 0x14, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x2d, 0x72, 0x75, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x6d, 0x6f, 0x64, 0x22, 0xaf, 0x03, 0x0a, 0x14,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x7a, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x7a, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3d,
	0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x6d, 0x6f, 0x64, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x75,
	0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x28, 0x20, 0x03, 0x28, 0x01, 0x52, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x6d, 0x6f, 0x64, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x75,
	0x6c, 0x65, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8d, 0x01,
	0x0a, 0x12, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x2e, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x91, 0x01,
	0x0a, 0x04, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x62, 0x65, 0x6e, 0x63, 0x68,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x25, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6d, 0x6f, 0x64, 0x2e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x12, 0x2c, 0x0a, 0x09, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x6f, 0x64, 0x2e, 0x41, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x09, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x22, 0x48, 0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3f, 0x0a, 0x09, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x2a, 0x40, 0x0a, 0x0c,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0a, 0x0a, 0x06,
	0x65, 0x71, 0x75, 0x61, 0x6c, 0x73, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x45,
	0x71, 0x75, 0x61, 0x6c, 0x73, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x6c, 0x69, 0x6b, 0x65, 0x10,
	0x02, 0x12, 0x0b, 0x0a, 0x07, 0x6e, 0x6f, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x10, 0x03, 0x42, 0x07,
	0x5a, 0x05, 0x2e, 0x2f, 0x6d, 0x6f, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_streaming_rule_proto_rawDescOnce sync.Once
	file_streaming_rule_proto_rawDescData = file_streaming_rule_proto_rawDesc
)

func file_streaming_rule_proto_rawDescGZIP() []byte {
	file_streaming_rule_proto_rawDescOnce.Do(func() {
		file_streaming_rule_proto_rawDescData = protoimpl.X.CompressGZIP(file_streaming_rule_proto_rawDescData)
	})
	return file_streaming_rule_proto_rawDescData
}

var file_streaming_rule_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_streaming_rule_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_streaming_rule_proto_goTypes = []interface{}{
	(FilterAction)(0),            // 0: mod.FilterAction
	(*StreamingRuleMessage)(nil), // 1: mod.StreamingRuleMessage
	(*StreamingRuleBatch)(nil),   // 2: mod.StreamingRuleBatch
	(*Rule)(nil),                 // 3: mod.Rule
	(*Filter)(nil),               // 4: mod.Filter
	(*Aggregate)(nil),            // 5: mod.Aggregate
	nil,                          // 6: mod.StreamingRuleMessage.LabelsEntry
}
var file_streaming_rule_proto_depIdxs = []int32{
	6, // 0: mod.StreamingRuleMessage.labels:type_name -> mod.StreamingRuleMessage.LabelsEntry
	3, // 1: mod.StreamingRuleMessage.rule:type_name -> mod.Rule
	1, // 2: mod.StreamingRuleBatch.messages:type_name -> mod.StreamingRuleMessage
	4, // 3: mod.Rule.filters:type_name -> mod.Filter
	5, // 4: mod.Rule.aggregate:type_name -> mod.Aggregate
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_streaming_rule_proto_init() }
func file_streaming_rule_proto_init() {
	if File_streaming_rule_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_streaming_rule_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamingRuleMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streaming_rule_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamingRuleBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streaming_rule_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streaming_rule_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streaming_rule_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Aggregate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_streaming_rule_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_streaming_rule_proto_goTypes,
		DependencyIndexes: file_streaming_rule_proto_depIdxs,
		EnumInfos:         file_streaming_rule_proto_enumTypes,
		MessageInfos:      file_streaming_rule_proto_msgTypes,
	}.Build()
	File_streaming_rule_proto = out.File
	file_streaming_rule_proto_rawDesc = nil
	file_streaming_rule_proto_goTypes = nil
	file_streaming_rule_proto_depIdxs = nil
}
